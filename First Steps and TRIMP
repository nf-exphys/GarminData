#This is the first successsful use of the fit file package and TRIMP calculation

#devtools::install_github("grimbough/fitFileR") #only need this line the first time
library(fitFileR); library(tidyverse); library(ggplot2)
garmin_file2 <- system.file("extdata", "150s.fit", package = "fitFileR")
garmin2 <- readFitFile(garmin_file2)

up.laps <- garmin2$lap %>%
  filter(total_timer_time <32 & total_timer_time > 20) #150m laps in 150 up 50 down workout, plus the 200s at the end
mean(up.laps$avg_speed) #average speed for up laps in m/s

garmin2$record %>%
  mutate(HRzone = case_when(garmin2$record$heart_rate < 135 ~ "warmup",
                            garmin2$record$heart_rate >135 & garmin2$record$heart_rate <= 155 ~ "easy",
                            garmin2$record$heart_rate >156 & garmin2$record$heart_rate <= 168 ~ "moderate",
                            garmin2$record$heart_rate >169 & garmin2$record$heart_rate <= 175 ~ "tempo",
                            garmin2$record$heart_rate >175 ~ "hard",
                            TRUE ~ "other")) #Adds a category to the line-by-line record data and classifies each line by HR zone

ggplot(garmin2$record, aes(x=heart_rate)) + geom_histogram(binwidth = 1 #Makes a histogram of the frequency of the HR data

#Calculate TRIMP
#TRIMPexp = sum(D x HRr x 0.64e^1.92) where HRr is %HRR and D is duration
#The code below works assuming data is collected once a second every second, which it seems to do?

HRfreq <- garmin2$record %>%
  count(heart_rate) #makes data frame of frequencies of each HR value
str(HRfreq) #Confirms both are integers
names(HRfreq)[1] <- "HR" #Set name of first column to HR
names(HRfreq)[2] <- "number" #Set name of second column to number
str(HRfreq)

#Create HRR column
HRfreqHRR <- HRfreq %>%
  mutate(HRR = ((HRfreq$HR-48)/(192-48)))

#Now apply TRIMP formula
HRfreqTRIMP <- HRfreqHRR %>%
  mutate(TRIMP = (HRfreqHRR$number / 60) * HRfreqHRR$HRR * (0.64 * exp(1.92*HRfreqHRR$HRR)))
sum(HRfreqTRIMP$TRIMP, na.rm = TRUE) #TRIMP value for the activity
